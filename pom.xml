<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<!-- Project Declaration -->
	<groupId>com.rayfowler</groupId>
	<!-- Just to avoid a warning -->
	<organization>
		<name>1</name>
	</organization>
	<artifactId>rotp</artifactId>
	<version>${revision}</version>
	<packaging>jar</packaging>
	
	<!-- Variables Declaration -->
	<properties>
		<!-- File Name Format -->
		<maven.build.timestamp.format>yyyy-MM-dd</maven.build.timestamp.format>
		<revision>Fusion-${maven.build.timestamp}</revision>
		<!-- EXE converter Format yyyy.M.d.H -->
		<exeVersion>${current.time}</exeVersion>
		<!-- Tag Format yyyy/MM/dd/HH/mm -->
		<gitHubTag>${build.date}</gitHubTag>

		<!-- #################################################### -->
		<!-- Parameters that'll be overriden in .yml Actions file -->
		<!-- <repName>Fusion-Mod</repName>                        -->
		<!-- <repOwner>BrokenRegistry</repOwner>                  -->
		<!-- <repFullName>BrokenRegistry/Fusion-Mod</repFullName> -->
		<!-- <repBranch>main</repBranch>                          -->
		<!-- <notes>releaseNotes.md</notes>                       -->
		<!-- <hide>false</hide> # Publish as draft?               -->
		<!--                                       -->
		<!-- Don't Forget:                                        -->
		<!-- In Settings: Actions have to be enabled              -->
		<!-- In Settings: Give workflows the right to write       -->
		<!-- #################################################### -->
		<!-- Default values if not overriden -->
		<repName>Fusion-Mod</repName>
        <repOwner>dev-ricks</repOwner>
        <repFullName>dev-ricks/Rotp-Fusion</repFullName>
		<repBranch>main</repBranch>
        <notes>releaseNotesRS.md</notes>
		<hide>false</hide>
		<!-- #################################################### -->

		<pdfFileName>Description.pdf</pdfFileName>
		<BaseFileName>rotp-${revision}</BaseFileName>
	 	<!-- Maven Standard -->
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<java.version>17</java.version>
        <junit.jupiter.version>5.13.4</junit.jupiter.version>
        <junit.platform.version>5.13.4</junit.platform.version>
        <mockito.version>5.18.0</mockito.version>
		<GITHUB_TOKEN></GITHUB_TOKEN>
	</properties>

	<!-- GitHub Declaration -->
	<scm>
		<connection>scm:git:${project.scm.url}</connection>
		<developerConnection>scm:git:${project.scm.url}</developerConnection>
		<url>https://github.com/${repFullName}.git</url>
		<tag>HEAD</tag>
	</scm>

	<distributionManagement>
		<repository>
			<id>github</id>
			<name>${repOwner}</name>
			<url>https://maven.pkg.github.com/${repFullName}</url>
		</repository>
	</distributionManagement>

	<!-- All the dependencies Declaration -->
	<dependencies>
		<!-- JUNIT dependencies -->
		<dependency>
			<groupId>org.junit.jupiter</groupId>
			<artifactId>junit-jupiter-engine</artifactId>
			<version>${junit.jupiter.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.junit.jupiter</groupId>
			<artifactId>junit-jupiter-api</artifactId>
			<version>${junit.jupiter.version}</version>
			<scope>test</scope>
		</dependency>
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-core</artifactId>
            <version>${mockito.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-junit-jupiter</artifactId>
            <version>${mockito.version}</version>
            <scope>test</scope>
        </dependency>
		<!-- Base and modders ROTP dependencies -->
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-math3</artifactId>
			<version>3.6.1</version>
		</dependency>
		<!-- https://mvnrepository.com/artifact/org.apache.commons/commons-lang3 -->
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-lang3</artifactId>
			<version>3.12.0</version>
		</dependency>
		<dependency>
			<groupId>com.googlecode.soundlibs</groupId>
			<artifactId>tritonus-share</artifactId>
			<version>0.3.7.4</version>
		</dependency>
		<dependency>
			<groupId>com.googlecode.soundlibs</groupId>
			<artifactId>vorbisspi</artifactId>
			<version>1.0.3.3</version>
		</dependency>
		<dependency>
			<groupId>org.sejda.imageio</groupId>
			<artifactId>webp-imageio</artifactId>
			<version>0.1.6</version>
		</dependency>
		<!-- Java Native Access Platform -->
		<dependency>
			<groupId>net.java.dev.jna</groupId>
			<artifactId>jna-platform</artifactId>
			<version>5.14.0</version>
		</dependency>
	</dependencies>

	<!-- Files generation -->
	<build>
		<!-- Ressources non-conventionnal location Declaration-->
		<sourceDirectory>src</sourceDirectory>
        <testSourceDirectory>test</testSourceDirectory>
		<resources>
			<resource>
				<directory>src</directory>
				<excludes>
					<exclude>**/*.java</exclude>
					<exclude>rotp-version.properties</exclude>
				</excludes>
			</resource>
			<resource>
				<directory>src</directory>
				<includes>
					<include>rotp-version.properties</include>
				</includes>
				<filtering>true</filtering>
			</resource>
			<resource>
				<directory>${project.basedir}</directory>
				<includes>
					<include>README.md</include>
				 </includes>
				<filtering>true</filtering>
			</resource>
		</resources>
        <testResources>
            <testResource>
                <directory>test</directory>
                <excludes>
                    <exclude>**/*.java</exclude>
                </excludes>
            </testResource>
        </testResources>

		<!-- Building tools -->
		<plugins>
			<!-- Second time stamp for sorting purpose -->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>build-helper-maven-plugin</artifactId>
				<version>3.3.0</version>
				<executions>
					<execution>
						<id>timestamp-property</id>
						<goals>
							<goal>timestamp-property</goal>
						</goals>
						<configuration>
							<name>current.time</name>
							<pattern>yyyy.M.d.H</pattern>
							<timeZone>GMT</timeZone>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>buildnumber-maven-plugin</artifactId>
				<version>3.0.0</version>
				<executions>
					<execution>
						<phase>validate</phase>
						<goals>
							<goal>create-timestamp</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<revisionOnScmFailure>no.scm.config.in.pom</revisionOnScmFailure>
					<timestampFormat>yyyy/MM/dd/HHmm</timestampFormat>
					<timestampPropertyName>build.date</timestampPropertyName>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>properties-maven-plugin</artifactId>
				<version>1.0.0</version>
				<executions>
					<execution>
						<phase>generate-resources</phase>
						<goals>
							<goal>write-project-properties</goal>
						</goals>
						<configuration>
							<outputFile>${project.build.outputDirectory}/build.properties</outputFile>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.8.1</version>
				<configuration>
					<source>${java.version}</source>
					<target>${java.version}</target>
				</configuration>
			</plugin>
			
			<!-- images & sound compression, using antrun which is standard -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-antrun-plugin</artifactId>
				<version>3.1.0</version> <!-- Must be high version or echo doesn't work -->
				<executions>
					<execution>
						<id>ogg</id>
						<phase>compile</phase>
 						<goals>
							<goal>run</goal>
						</goals>
						<configuration>
                            <target>
								<parallel threadCount="4">
									<!-- convert wav to ogg. Needs vorbis-tools package, oggenc executable  -->
									<apply executable="oggenc" dest="${project.build.outputDirectory}" verbose="true" parallel="false">
										<srcfile/>
										<arg value="-o"/>
										<targetfile/>
										<fileset dir="${project.build.sourceDirectory}">
											<patternset>
												<include name="**/*.wav"/>
											</patternset>
										</fileset>
										<mapper type="glob" from="*.wav" to="*.ogg"/>
 									</apply>
									<!-- convert png/jpg to webp. Needs webp package, cwebp executable -->
									<!-- quality 90 is visually indistinguishable from original jpeg -->
									<!-- but given that people using minified version want a small jar, let's use quality 80 -->
 									<apply executable="cwebp" dest="${project.build.outputDirectory}" verbose="true" parallel="false">
										<arg value="-short"/>
										<arg value="-mt"/>
										<arg value="-q"/>
										<arg value="75"/>
										<srcfile/>
										<arg value="-o"/>
 										<targetfile/>
										<fileset dir="${project.build.sourceDirectory}">
											<patternset>
												<include name="**/*.png"/>
												<include name="**/*.jpg"/>
											</patternset>
										</fileset>
										<firstmatchmapper>
											<globmapper from="*.png" to="*.webp"/>
											<globmapper from="*.jpg" to="*.webp"/>
										</firstmatchmapper>
									</apply>
								</parallel>
							</target>
						</configuration>
					</execution>
				</executions>
			</plugin>
 
			<!-- plugin for Mini Jar -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-shade-plugin</artifactId>
				<version>3.3.0</version>
				<executions>
					<!-- Run shade goal on package phase -->
					<!-- package minified jar. This needs to run first as it's attached, doesn't replace main jar -->
					<execution>
						<id>shade-mini</id>
						<phase>package</phase>
						<goals>
							<goal>shade</goal>
						</goals>
						<configuration>
							<createDependencyReducedPom>false</createDependencyReducedPom>
							<shadedArtifactAttached>true</shadedArtifactAttached>
							<shadedClassifierName>mini</shadedClassifierName>
							<transformers>
								<!-- add Main-Class to manifest file -->
								<!-- When launching full version, run Rotp directly, no need to go via RotpGovernor main -->
								<transformer
										implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
									<mainClass>rotp.Rotp</mainClass>
									<manifestEntries>
										<Built-By>${repOwner}</Built-By>
										<Mini>true</Mini>
									</manifestEntries>
								</transformer>
							</transformers>
							<filters>
								<filter>
									<artifact>com.rayfowler:rotp</artifact>
									<excludes>
										<exclude>**/*.wav</exclude>
										<exclude>**/*.jpg</exclude>
										<exclude>**/*.png</exclude>
									</excludes>
								</filter>
							</filters>
						</configuration>
					</execution>
					<execution>
						<id>shade-original</id>
						<phase>package</phase>
						<goals>
							<goal>shade</goal>
						</goals>
						<configuration>
							<createDependencyReducedPom>false</createDependencyReducedPom>
							<transformers>
								<!-- add Main-Class to manifest file -->
								<!-- When launching full version, run Rotp directly, no need to go via RotpGovernor main -->
								<transformer
										implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
									<mainClass>rotp.RotpGovernor</mainClass>
									<manifestEntries>
										<Built-By>${repOwner}</Built-By>
									</manifestEntries>
								</transformer>
							</transformers>
							<filters>
								<filter>
									<artifact>com.rayfowler:rotp</artifact>
									<excludes>
										<exclude>**/*.ogg</exclude>
										<exclude>**/*.webp</exclude>
										<exclude>**/rotp-mini.properties</exclude>
									</excludes>
								</filter>
							</filters>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<!-- Download Eclipse OpenJDK to package in windows binary zip -->
			<plugin>
				<groupId>com.googlecode.maven-download-plugin</groupId>
				<artifactId>download-maven-plugin</artifactId>
				<version>1.6.3</version>
				<executions>
					<execution>
						<phase>compile</phase>
						<goals>
							<goal>wget</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<!-- ##### Think to also update the version number in Windows.xml ##### -->
					<url>
						https://github.com/adoptium/temurin23-binaries/releases/download/jdk-23.0.1%2B11/OpenJDK23U-jre_x64_windows_hotspot_23.0.1_11.zip
					</url>
					<unpack>true</unpack>
					<outputDirectory>${project.build.directory}/jre-win</outputDirectory>
					<sha256>3eec89e80f86a3592f2d3e600f88f1745fc02dbdf5347195837b736ce93b403b</sha256>
				</configuration>
			</plugin>
			<!-- Windows executable creation -->
			<plugin>
				<groupId>com.akathist.maven.plugins.launch4j</groupId>
				<artifactId>launch4j-maven-plugin</artifactId>
				<!-- Last known working version !!! -->
				<version>2.1.2</version>
				<executions>
					<execution>
						<phase>package</phase>
						<goals>
							<goal>launch4j</goal>
						</goals>
						<configuration>
							<icon>launch4j/rotp.ico</icon>
							<splash>
								<file>launch4j/rotp_splash.bmp</file>
								<waitForWindow>false</waitForWindow>
								<timeout>15</timeout>
								<timeoutErr>false</timeoutErr>
							</splash>
							<headerType>gui</headerType>
							<outfile>target/${BaseFileName}.exe</outfile>
							<jar>target/${BaseFileName}-mini.jar</jar>
							<errTitle>ROTP</errTitle>
							<classPath>
								<mainClass>rotp.RotpGovernor</mainClass>
								<addDependencies>false</addDependencies>
								<preCp>anything</preCp>
							</classPath>
							<jre>
								<path>jre</path>
								<minVersion>17</minVersion>
								<bundledJre64Bit>true</bundledJre64Bit>
								<runtimeBits>64</runtimeBits>
								<jdkPreference>preferJre</jdkPreference>
								<initialHeapSize>2000</initialHeapSize>
								<maxHeapSize>3500</maxHeapSize>
							</jre>
							<versionInfo>
								<fileVersion>${exeVersion}</fileVersion>
								<!-- <txtFileVersion>${project.version}</txtFileVersion> -->
								<txtFileVersion>${revision}</txtFileVersion>
								<fileDescription>Remnants of the Precursors</fileDescription>
								<copyright>Copyright Ray Fowler</copyright>
								<productVersion>${exeVersion}</productVersion>
								<txtProductVersion>${revision}</txtProductVersion>
								<productName>Remnants of the Precursors</productName>
								<internalName>rotp</internalName>
								<originalFilename>${BaseFileName}.exe</originalFilename>
							</versionInfo>
						</configuration>
					</execution>
				</executions>
			</plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <executions>
                    <execution>
                        <goals>
                            <goal>properties</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <configuration>
                    <argLine>-javaagent:${org.mockito:mockito-core:jar}</argLine>
                </configuration>
            </plugin>
			<!-- package a zip for windows -->
			<plugin>
				<artifactId>maven-assembly-plugin</artifactId>
				<executions>
					<execution>
						<phase>package</phase>
						<goals>
							<goal>single</goal>
						</goals>
						<configuration>
							<appendAssemblyId>true</appendAssemblyId>
							<descriptors>
								<descriptor>src/assembly/windows.xml</descriptor>
							</descriptors>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<!-- runs with github-release:github-release -->
			<plugin>
				<groupId>com.ragedunicorn.tools.maven</groupId>
				<artifactId>github-release-maven-plugin</artifactId>
				<version>1.0.7</version>
				<executions>
					<execution>
						<id>default-cli</id>
						<configuration>
							<owner>${repOwner}</owner>
							<repository>${repName}</repository>
							<authToken>${GITHUB_TOKEN}</authToken>
							<tagName>${build.date}</tagName>
							<name>${BaseFileName}</name>
							<targetCommitish>${repBranch}</targetCommitish>
							<releaseNotes>${notes}</releaseNotes>
							<draft>${hide}</draft>
							<assets>
								<asset>target/${BaseFileName}.jar</asset>
								<asset>target/${BaseFileName}-mini.jar</asset>
								<asset>target/${BaseFileName}-windows.zip</asset>
								<asset>${pdfFileName}</asset>
								<asset>BitmapGalaxyExamples.zip</asset>
								<!-- <asset>Profiles.pdf</asset> -->
							</assets>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>
</project>
